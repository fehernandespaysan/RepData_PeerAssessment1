library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm)
boxplot(ppm, col="blue")
boxplot(ppm, col="blue", abline=12)
abline(h=12)
hist(ppm)
hist(ppm, col="green")
ru(ppm)
rgu(ppm)
rug(ppm)
low
high
hist(ppm, col="green",breaks = 100)
rug(ppm)
hist(ppm, col="green")
abline(v=12)
abline(v=12, lwd=2)
abline(v=median(ppm),col="magnta", lwd=4)
abline(v=median(ppm),col="magenta", lwd=4)
names(pollutino)
names(pollution)
table(pollution$region)
reg<-table(pollution$region)
reg
barplot(reg, col="wheat, main="Number of Counties in Each Region"")
barplot(reg, col="wheat, main="Number of Counties in Each Region")
barplot(reg, col="wheat", main="Number of Counties in Each Region")
pm25~
)
BOXPLOT(pm25~region, data=pollution, col="red")
boxplot(pm25~region, data=pollution, col="red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east<- subset(pollution, region="east")
east<- subset(pollution, region=="east")
head(east)
hist(east$pm25, col="green")
hist(subset(popullation, region="west"), col="green")
hist(subset(pollution, region="west"), col="green")
west<- ubset(pollution, region="west")
west<- subset(pollution, region="west")
hist(subset(pollution, region="west")$pm25, col="green")
hist(subset(pollution, region=="west")$pm25, col="green")
plot(pollution, latitude~pm25)
plot(pollution, call=latitude~pm25)
with(pollution, plot(latitude,pm25)
with(pollution, plot(latitude,pm25))
with(pollution, plot(latitude,pm25))
abline(h=12)
abline(h=12, lwd=2, lty=2)
plot(pllution$latitude,ppm, col=pollution))
plot(pllution$latitude,ppm, col=pollution$region))
plot(pollution$latitude,ppm, col=pollution$region))
plot(pollution$latitude,ppm, col=pollution$region)
abline(h=12, lwd=2, lty=2)
par(mfrow= c(1,2), mar=c(5,4,2,1))
west<- subset(pollution, region="west")
west<- subset(pollution, region=="west")
plto(west$latitude, west$pm25, main="West" )
plot(west$latitude, west$pm25, main="West" )
west<- subset(pollution, region=="east")
plot(east$latitude, east$pm25, main="east" )
plot(east$latitude, east$pm25, main="East" )
library(swirl)
swirl()
?Devices
with(faithful,plot)
with(faithful,plot(eruptions, waiting))
title(main="old Faithful Geyser data")
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file="myplot.pdf")
with(faithful,plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful,plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file="geyserplot.png")
dev.off()
download.packages("Markdown")
install.packages("devtools")
library("devtools")
devtools::install_github("rstudio/rmarkdown")
setwd("D:/Internal Audit/R&D/Fernanda/Practice/R/Reproducible Research/Assingment 1")
activitydata<- read.csv('activity.csv')
View(activitydata)
activitydata$date<-as.date(activitydata$date)
activitydata$date<-as.Date(activitydata$date)
View(activitydata)
activitydata_clean<- activitydata[!is.na(activitydata$steps),]
View(activitydata_clean)
activitydata_bydate<- group_by(activitydata_clean, date)
library(dplyr)
activitydata_bydate<- group_by(activitydata_clean, date)
View(activitydata_bydate)
steps_by_day<- summarise(activitydata_bydate, Total_steps= sum(steps))
View(steps_by_day)
hist(steps_by_day$Total_steps)
hist(steps_by_day$Total_steps, xlab)
hist(steps_by_day$Total_steps, xlab='Total Steps', main= 'Histogram')
hist(steps_by_day$Total_steps, xlab='Total Steps', main= 'Histogram', col="orange")
hist(steps_by_day$Total_steps, xlab='Total Steps', main= 'Histogram', col="purple")
hist(steps_by_day$Total_steps, xlab='Total Steps', main= 'Histogram', col="pink")
mean(steps_by_day$Total_steps)
median(steps_by_day$Total_steps)
activitydata_byinterval<- group_by(activitydata_clean, steps)
View(activitydata_byinterval)
activitydata_byinterval<- group_by(activitydata_clean, interval)
meansteps_by_interval<- summarize(activitydata_byinterval, mean= mean(steps))
VIew(meansteps_by_interval)
View(meansteps_by_interval)
plot(meansteps_by_interval$interval, meansteps_by_interval$mean, type= "l", xlab = "Interval", main="Average of Steps", col="pink")
plot(meansteps_by_interval$interval, meansteps_by_interval$mean, type= "l", xlab = "Interval", main="Average of Steps", col="darkpink")
plot(meansteps_by_interval$interval, meansteps_by_interval$mean, type= "l", xlab = "Interval", main="Average of Steps", col="blue")
max(meansteps_by_interval$mean)
meansteps_by_interval[max(meansteps_by_interval$mean),]
meansteps_by_interval[maxVal(meansteps_by_interval$mean),]
x<- meansteps_by_interval[max(meansteps_by_interval$mean),]
meansteps_by_interval[meansteps_by_interval$mean =x,]
meansteps_by_interval[meansteps_by_interval$mean=x,]
meansteps_by_interval[meansteps_by_interval$mean==x,]
meansteps_by_interval[meansteps_by_interval$mean==max (steps_by_day),]
meansteps_by_interval[meansteps_by_interval$mean == max(steps),]
meansteps_by_interval[steps == max(steps),]
meansteps_by_interval[mean == max(mean),]
meansteps_by_interval[mean == max(mean), .(max_interval = interval)]
library (data.table)
meansteps_by_interval[mean == max(mean), .(max_interval = interval)]
meansteps_by_interval[meansteps_by_interval$mean==x]
meansteps_by_interval[meansteps_by_interval$mean==x,]
meansteps_by_interval[mean==x,]
?filter
View(activitydata_byinterval)
filter(meansteps_by_interval, mean==x)
filter(meansteps_by_interval, mean==max(mean))
sum(is.na(activitydata$steps))
activitydata$null<- is,na(activitydata$steps)
activitydata$null<- is.na(activitydata$steps)
View(activitydata)
merge(activitydata, meansteps_by_interval, by = interval)
merge(activitydata, meansteps_by_interval)
activitydata_mean<- merge(activitydata, meansteps_by_interval)
View(activitydata_mean)
test<- if(activitydata$null='TRUE', activitydata$mean, activitydata$steps)
test<- if(activitydata$null='TRUE') {activitydata$mean} else{}
test<- if(activitydata$null=='TRUE') {activitydata$mean} else{activitydata$steps}
test<- if(activitydata$null==1) {activitydata$mean} else{activitydata$steps}
test<- if(activitydata$null== TRUE) {activitydata$mean} else{activitydata$steps}
test
test<- if(activitydata$null== 1) {activitydata$mean} else{activitydata$steps}
activitydata&test<- ifelse(activitydata$null== TRUE, activitydata&test=activitydata$mean, activitydata&test=activitydata$steps)
activitydata&test<- ifelse(activitydata$null= TRUE, activitydata&test=activitydata$mean, activitydata&test=activitydata$steps)
ifelse(activitydata$null= TRUE, activitydata&test=activitydata$mean, activitydata&test=activitydata$steps)
ifelse(activitydata$null== TRUE, activitydata&test=activitydata$mean, activitydata&test=activitydata$steps)
ifelse(activitydata$null== TRUE, activitydata&test<-activitydata$mean, activitydata&test<-activitydata$steps)
ifelse(activitydata$null== TRUE, activitydata&test <- activitydata$mean, activitydata&test <- activitydata$steps)
ifelse(activitydata$null== TRUE, activitydata$test <- activitydata$mean, activitydata&test <- activitydata$steps)
Vire(activitydata)
ifelse(activitydata$null== 1, activitydata$test <- activitydata$mean, activitydata&test <- activitydata$steps)
ifelse(activitydata$null== yes, activitydata$test <- activitydata$mean, activitydata&test <- activitydata$steps)
ifelse(activitydata$null== 'TRUE', activitydata$test <- activitydata$mean, activitydata&test <- activitydata$steps)
ifelse(activitydata_mean$null== 'TRUE', activitydata_mean$test <- activitydata_mean$mean, activitydata_mean&test <- activitydata_mean$steps)
ifelse(activitydata_mean$null== 'TRUE', activitydata_mean$test <- activitydata_mean$mean, activitydata_mean$test <- activitydata_mean$steps)
ifelse(activitydata_mean$null== TRUE, activitydata_mean$test <- activitydata_mean$mean, activitydata_mean$test <- activitydata_mean$steps)
ifelse(activitydata_mean$steps== "NA", activitydata_mean$test <- activitydata_mean$mean, activitydata_mean$test <- activitydata_mean$steps)
x<-ifelse(activitydata_mean$steps== 'NA', activitydata_mean$test <- activitydata_mean$mean, activitydata_mean$test <- activitydata_mean$steps)
x<-ifelse(activitydata_mean$steps== 'NA', activitydata_mean$mean, activitydata_mean$steps)
x
x<-ifelse(is.na(activitydata_mean$steps), activitydata_mean$mean, activitydata_mean$steps)
x
activitydata_mean$test<-ifelse(is.na(activitydata_mean$steps), activitydata_mean$mean, activitydata_mean$steps)
activitydata_mean$steps<-ifelse(is.na(activitydata_mean$steps), activitydata_mean$mean, activitydata_mean$steps)
cleandata<- arrange(activitydata_mean, steps, date, interval)
View(cleandata)
cleandata<- select(activitydata_mean, steps, date, interval)
